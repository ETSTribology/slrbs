name: Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  docker:
    name: Docker Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        fetch-depth: 0
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to GitHub Container Registry
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: false
        tags: slrbs:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        load: true
        
    - name: Test Docker image - Basic
      run: |
        # Test if the Docker image runs
        docker run --rm slrbs:latest --help
        
        # Run a simple scenario test
        docker run --rm slrbs:latest --scenario basic --headless --steps 100
        
    - name: Test Docker image - Python Module
      run: |
        # Create a test script
        cat > test_module.py << 'EOF'
        try:
            import pyslrbs
            print("Successfully imported pyslrbs module")
            
            # Create a simple rigid body system
            system = pyslrbs.RigidBodySystem()
            print("Successfully created RigidBodySystem")
            
            # Add a rigid body
            rb = pyslrbs.RigidBody()
            system.addRigidBody(rb)
            print("Successfully added RigidBody to system")
            
            print("All tests passed!")
        except Exception as e:
            print(f"Error: {e}")
            exit(1)
        EOF
        
        # Run the test script in Docker
        docker run --rm -v $(pwd)/test_module.py:/app/test_module.py slrbs:latest python3 /app/test_module.py
        
    - name: Build and push container image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max