name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Setup Ninja
      uses: ashutoshvarma/setup-ninja@master
      
    - name: Install CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: '3.23.0'
        
    - name: Configure CMake
      run: cmake --preset windows-${{ matrix.build_type | lower }}
      
    - name: Build
      run: cmake --build build/win64 --config ${{ matrix.build_type }}

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev ninja-build
        
    - name: Install CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: '3.23.0'
        
    - name: Configure CMake
      run: cmake --preset linux-${{ matrix.build_type | lower }}
      
    - name: Build
      run: cmake --build build/linux --config ${{ matrix.build_type }}

  build-macos:
    name: Build on macOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]
        
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        
    - name: Install dependencies
      run: |
        brew install ninja
        
    - name: Install CMake
      uses: lukka/get-cmake@latest
      with:
        cmakeVersion: '3.23.0'
        
    - name: Configure CMake
      run: |
        # Use Ninja instead of Xcode for faster builds on GitHub Actions
        cmake -B build/macos -G "Ninja" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        
    - name: Build
      run: cmake --build build/macos --config ${{ matrix.build_type }}
