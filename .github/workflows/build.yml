name: Build and Test

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              name: "Windows MSVC",
              os: windows-latest,
              build_type: "Debug",
              cc: "cl", cxx: "cl"
            }
          - {
              name: "Ubuntu GCC",
              os: ubuntu-latest,
              build_type: "Debug",
              cc: "gcc", cxx: "g++"
            }
          - {
              name: "Ubuntu Clang",
              os: ubuntu-latest,
              build_type: "Release",
              cc: "clang", cxx: "clang++"
            }
          - {
              name: "macOS Clang",
              os: macos-latest,
              build_type: "Debug",
              cc: "clang", cxx: "clang++"
            }

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master
        with:
          version: 1.11.0

      - name: Install Qt (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev qtbase5-dev

      - name: Install Qt (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install qt@5

      - name: Install Qt (Windows)
        if: runner.os == 'Windows'
        uses: jurplel/install-qt-action@v3
        with:
          version: '5.15.2'
          modules: 'core gui opengl'

      - name: Configure CMake
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

      - name: Build
        shell: bash
        run: |
          cd build
          cmake --build . --config ${{ matrix.config.build_type }}

      - name: Test
        shell: bash
        run: |
          cd build
          ctest --output-on-failure -C ${{ matrix.config.build_type }}
        continue-on-error: true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: slrbs-${{ matrix.config.os }}-${{ matrix.config.build_type }}
          path: |
            build/slrbs*
            build/*/slrbs*
            build/*/*/slrbs*
          if-no-files-found: ignore